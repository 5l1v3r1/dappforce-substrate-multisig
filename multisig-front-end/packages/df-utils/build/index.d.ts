import BN from 'bn.js';
export declare const ZERO: BN;
export declare function bnToStr(bn?: BN, dflt?: string): string;
export declare const isDefined: (x: any) => boolean;
export declare const isDef: (x: any) => boolean;
export declare const notDefined: (x: any) => boolean;
export declare const notDef: (x: any) => boolean;
export declare const isObj: (x: any) => boolean;
export declare const isStr: (x: any) => boolean;
export declare const isNum: (x: any) => boolean;
export declare const isEmptyStr: (x: any) => boolean;
export declare const nonEmptyStr: (x?: any) => boolean;
export declare const parseNumStr: (num: string) => number | undefined;
export declare const nonEmptyArr: (x: any) => boolean;
export declare function findNameByAddress(address: string): string | undefined;
import { Options as QueryOptions } from '@polkadot/ui-api/with/types';
/** Example of apiQuery: 'query.councilElection.round' */
export declare function queryToProp(apiQuery: string, paramNameOrOpts?: string | QueryOptions): [string, QueryOptions];
export declare const queryBlogsToProp: (storageItem: string, paramNameOrOpts?: string | QueryOptions | undefined) => [string, QueryOptions];
export declare function getUrlParam(location: Location, paramName: string, deflt?: string | undefined): string | undefined;
