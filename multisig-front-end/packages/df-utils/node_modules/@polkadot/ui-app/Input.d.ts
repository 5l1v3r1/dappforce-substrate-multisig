import { BareProps } from './types';
import React from 'react';
declare type Input$Type = 'number' | 'password' | 'text';
declare type Props = BareProps & {
    autoFocus?: boolean;
    children?: React.ReactNode;
    defaultValue?: any;
    help?: React.ReactNode;
    icon?: React.ReactNode;
    isAction?: boolean;
    isDisabled?: boolean;
    isEditable?: boolean;
    isError?: boolean;
    isHidden?: boolean;
    label?: React.ReactNode;
    max?: any;
    maxLength?: number;
    min?: any;
    name?: string;
    onChange?: (value: string) => void;
    onBlur?: (event: React.KeyboardEvent<Element>) => void;
    onKeyDown?: (event: React.KeyboardEvent<Element>) => void;
    onKeyUp?: (event: React.KeyboardEvent<Element>) => void;
    onKeyPress?: (event: React.KeyboardEvent<Element>) => void;
    onPaste?: (event: React.ClipboardEvent<Element>) => void;
    placeholder?: string;
    tabIndex?: number;
    type?: Input$Type;
    value?: any;
    withLabel?: boolean;
};
declare type State = {
    name: string;
};
declare const KEYS: {
    A: string;
    ALT: string;
    ARROW_LEFT: string;
    ARROW_RIGHT: string;
    BACKSPACE: string;
    C: string;
    CMD: string;
    CTRL: string;
    ENTER: string;
    ESCAPE: string;
    TAB: string;
    V: string;
    X: string;
    ZERO: string;
    DECIMAL: string;
};
declare const KEYS_PRE: Array<any>;
declare const isCopy: (key: string, isPreKeyDown: boolean) => boolean;
declare const isCut: (key: string, isPreKeyDown: boolean) => boolean;
declare const isPaste: (key: string, isPreKeyDown: boolean) => boolean;
declare const isSelectAll: (key: string, isPreKeyDown: boolean) => boolean;
export default class Input extends React.PureComponent<Props, State> {
    state: State;
    render(): JSX.Element;
    private onChange;
    private onKeyDown;
    private onKeyUp;
    private onPaste;
}
export { isCopy, isCut, isPaste, isSelectAll, KEYS, KEYS_PRE };
