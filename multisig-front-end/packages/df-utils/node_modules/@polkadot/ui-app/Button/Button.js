"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _Button = _interopRequireDefault(require("semantic-ui-react/dist/commonjs/elements/Button/Button"));

var _util = require("@polkadot/util");

// Copyright 2017-2019 @polkadot/ui-app authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
class Button extends _react.default.PureComponent {
  render() {
    const _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          floated = _this$props.floated,
          icon = _this$props.icon,
          _this$props$isBasic = _this$props.isBasic,
          isBasic = _this$props$isBasic === void 0 ? false : _this$props$isBasic,
          _this$props$isCircula = _this$props.isCircular,
          isCircular = _this$props$isCircula === void 0 ? false : _this$props$isCircula,
          _this$props$isDisable = _this$props.isDisabled,
          isDisabled = _this$props$isDisable === void 0 ? false : _this$props$isDisable,
          _this$props$isNegativ = _this$props.isNegative,
          isNegative = _this$props$isNegativ === void 0 ? false : _this$props$isNegativ,
          _this$props$isPositiv = _this$props.isPositive,
          isPositive = _this$props$isPositiv === void 0 ? false : _this$props$isPositiv,
          _this$props$isPrimary = _this$props.isPrimary,
          isPrimary = _this$props$isPrimary === void 0 ? false : _this$props$isPrimary,
          label = _this$props.label,
          onClick = _this$props.onClick,
          size = _this$props.size,
          style = _this$props.style,
          tabIndex = _this$props.tabIndex;
    const props = {
      basic: isBasic,
      circular: isCircular,
      className,
      disabled: isDisabled,
      floated,
      icon,
      negative: isNegative,
      onClick,
      positive: isPositive,
      primary: isPrimary,
      size,
      secondary: !isBasic && !(isPositive || isPrimary || isNegative),
      style,
      tabIndex
    };
    return (0, _util.isUndefined)(label) && (0, _util.isUndefined)(children) ? _react.default.createElement(_Button.default, props) : _react.default.createElement(_Button.default, props, label, children);
  }

}

exports.default = Button;